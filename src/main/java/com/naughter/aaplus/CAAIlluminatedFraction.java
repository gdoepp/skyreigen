/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.naughter.aaplus;

public class CAAIlluminatedFraction {
    private long swigCPtr;
    protected boolean swigCMemOwn;

    protected CAAIlluminatedFraction(long cPtr, boolean cMemoryOwn) {
        swigCMemOwn = cMemoryOwn;
        swigCPtr = cPtr;
    }

    protected static long getCPtr(CAAIlluminatedFraction obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    protected void finalize() {
        delete();
    }

    public synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                AAJNI.delete_CAAIlluminatedFraction(swigCPtr);
            }
            swigCPtr = 0;
        }
    }

    public static double PhaseAngle(double r, double R, double Delta) {
        return AAJNI.CAAIlluminatedFraction_PhaseAngle__SWIG_0(r, R, Delta);
    }

    public static double PhaseAngle(double R, double R0, double B, double L, double L0, double Delta) {
        return AAJNI.CAAIlluminatedFraction_PhaseAngle__SWIG_1(R, R0, B, L, L0, Delta);
    }

    public static double PhaseAngleRectangular(double x, double y, double z, double B, double L, double Delta) {
        return AAJNI.CAAIlluminatedFraction_PhaseAngleRectangular(x, y, z, B, L, Delta);
    }

    public static double IlluminatedFraction(double PhaseAngle) {
        return AAJNI.CAAIlluminatedFraction_IlluminatedFraction__SWIG_0(PhaseAngle);
    }

    public static double IlluminatedFraction(double r, double R, double Delta) {
        return AAJNI.CAAIlluminatedFraction_IlluminatedFraction__SWIG_1(r, R, Delta);
    }

    public static double MercuryMagnitudeMuller(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_MercuryMagnitudeMuller(r, Delta, i);
    }

    public static double VenusMagnitudeMuller(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_VenusMagnitudeMuller(r, Delta, i);
    }

    public static double MarsMagnitudeMuller(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_MarsMagnitudeMuller(r, Delta, i);
    }

    public static double JupiterMagnitudeMuller(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_JupiterMagnitudeMuller(r, Delta);
    }

    public static double SaturnMagnitudeMuller(double r, double Delta, double DeltaU, double B) {
        return AAJNI.CAAIlluminatedFraction_SaturnMagnitudeMuller(r, Delta, DeltaU, B);
    }

    public static double UranusMagnitudeMuller(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_UranusMagnitudeMuller(r, Delta);
    }

    public static double NeptuneMagnitudeMuller(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_NeptuneMagnitudeMuller(r, Delta);
    }

    public static double MercuryMagnitudeAA(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_MercuryMagnitudeAA(r, Delta, i);
    }

    public static double VenusMagnitudeAA(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_VenusMagnitudeAA(r, Delta, i);
    }

    public static double MarsMagnitudeAA(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_MarsMagnitudeAA(r, Delta, i);
    }

    public static double JupiterMagnitudeAA(double r, double Delta, double i) {
        return AAJNI.CAAIlluminatedFraction_JupiterMagnitudeAA(r, Delta, i);
    }

    public static double SaturnMagnitudeAA(double r, double Delta, double DeltaU, double B) {
        return AAJNI.CAAIlluminatedFraction_SaturnMagnitudeAA(r, Delta, DeltaU, B);
    }

    public static double UranusMagnitudeAA(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_UranusMagnitudeAA(r, Delta);
    }

    public static double NeptuneMagnitudeAA(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_NeptuneMagnitudeAA(r, Delta);
    }

    public static double PlutoMagnitudeAA(double r, double Delta) {
        return AAJNI.CAAIlluminatedFraction_PlutoMagnitudeAA(r, Delta);
    }

    public CAAIlluminatedFraction() {
        this(AAJNI.new_CAAIlluminatedFraction(), true);
    }

}
