/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.projectpluto.astro;

public class VisLimit {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected VisLimit(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VisLimit obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        astroJNI.delete_VisLimit(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int setBrightnessParams(FixedBrightnessData fbd) {
    return astroJNI.VisLimit_setBrightnessParams(swigCPtr, this, FixedBrightnessData.getCPtr(fbd), fbd);
  }

  public int computeSkyBrightness(AngularBrightnessData abd) {
    return astroJNI.VisLimit_computeSkyBrightness(swigCPtr, this, AngularBrightnessData.getCPtr(abd), abd);
  }

  public double computeLimitingMag() {
    return astroJNI.VisLimit_computeLimitingMag(swigCPtr, this);
  }

  public int computeExtinction() {
    return astroJNI.VisLimit_computeExtinction(swigCPtr, this);
  }

  public void setMask(int m) {
    astroJNI.VisLimit_setMask(swigCPtr, this, m);
  }

  public double getK(long i) {
    return astroJNI.VisLimit_getK(swigCPtr, this, i);
  }

  public double getBrightness(long i) {
    return astroJNI.VisLimit_getBrightness(swigCPtr, this, i);
  }

  public double getExtinction(long i) {
    return astroJNI.VisLimit_getExtinction(swigCPtr, this, i);
  }

  public VisLimit() {
    this(astroJNI.new_VisLimit(), true);
  }

}
