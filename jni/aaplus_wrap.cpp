/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include <./AA+.h>


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAA2DCoordinate(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAA2DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAA2DCoordinate *)new CAA2DCoordinate();
  *(CAA2DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAA2DCoordinate_1X_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAA2DCoordinate *arg1 = (CAA2DCoordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA2DCoordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->X = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAA2DCoordinate_1X_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAA2DCoordinate *arg1 = (CAA2DCoordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA2DCoordinate **)&jarg1; 
  result = (double) ((arg1)->X);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAA2DCoordinate_1Y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAA2DCoordinate *arg1 = (CAA2DCoordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA2DCoordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Y = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAA2DCoordinate_1Y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAA2DCoordinate *arg1 = (CAA2DCoordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA2DCoordinate **)&jarg1; 
  result = (double) ((arg1)->Y);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAA2DCoordinate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAA2DCoordinate *arg1 = (CAA2DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAA2DCoordinate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAA3DCoordinate(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAA3DCoordinate *)new CAA3DCoordinate();
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1X_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->X = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1X_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  result = (double) ((arg1)->X);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1Y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Y = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1Y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  result = (double) ((arg1)->Y);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1Z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Z = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAA3DCoordinate_1Z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  result = (double) ((arg1)->Z);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAA3DCoordinate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAA3DCoordinate *arg1 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAA3DCoordinate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAAberration_1EarthVelocity(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAAberration::EarthVelocity(arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAAberration_1EclipticAberration(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = CAAAberration::EclipticAberration(arg1,arg2,arg3,arg4);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAAberration_1EquatorialAberration(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = CAAAberration::EquatorialAberration(arg1,arg2,arg3,arg4);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAAberration(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAAberration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAAberration *)new CAAAberration();
  *(CAAAberration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAAberration(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAAberration *arg1 = (CAAAberration *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAAberration **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAAngularSeparation_1Separation(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAAngularSeparation::Separation(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAAngularSeparation_1PositionAngle(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAAngularSeparation::PositionAngle(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAAngularSeparation_1DistanceFromGreatArc(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  result = (double)CAAAngularSeparation::DistanceFromGreatArc(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAAngularSeparation_1SmallestCircle(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jlong jarg7) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  bool *arg7 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = *(bool **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "bool & reference is null");
    return 0;
  } 
  result = (double)CAAAngularSeparation::SmallestCircle(arg1,arg2,arg3,arg4,arg5,arg6,*arg7);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAAngularSeparation(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAAngularSeparation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAAngularSeparation *)new CAAAngularSeparation();
  *(CAAAngularSeparation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAAngularSeparation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAAngularSeparation *arg1 = (CAAAngularSeparation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAAngularSeparation **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAABinaryStarDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAABinaryStarDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAABinaryStarDetails *)new CAABinaryStarDetails();
  *(CAABinaryStarDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  result = (double) ((arg1)->r);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1Theta_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Theta = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1Theta_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  result = (double) ((arg1)->Theta);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1Rho_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Rho = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStarDetails_1Rho_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  result = (double) ((arg1)->Rho);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAABinaryStarDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAABinaryStarDetails *arg1 = (CAABinaryStarDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAABinaryStarDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStar_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  CAABinaryStarDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  result = CAABinaryStar::Calculate(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(CAABinaryStarDetails **)&jresult = new CAABinaryStarDetails((const CAABinaryStarDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAABinaryStar_1ApparentEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAABinaryStar::ApparentEccentricity(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAABinaryStar(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAABinaryStar *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAABinaryStar *)new CAABinaryStar();
  *(CAABinaryStar **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAABinaryStar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAABinaryStar *arg1 = (CAABinaryStar *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAABinaryStar **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Equatorial2Ecliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAACoordinateTransformation::Equatorial2Ecliptic(arg1,arg2,arg3);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Ecliptic2Equatorial(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAACoordinateTransformation::Ecliptic2Equatorial(arg1,arg2,arg3);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Equatorial2Horizontal(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAACoordinateTransformation::Equatorial2Horizontal(arg1,arg2,arg3);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Horizontal2Equatorial(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAACoordinateTransformation::Horizontal2Equatorial(arg1,arg2,arg3);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Equatorial2Galactic(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = CAACoordinateTransformation::Equatorial2Galactic(arg1,arg2);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1Galactic2Equatorial(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = CAACoordinateTransformation::Galactic2Equatorial(arg1,arg2);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1DegreesToRadians(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::DegreesToRadians(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1RadiansToDegrees(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::RadiansToDegrees(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1RadiansToHours(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::RadiansToHours(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1HoursToRadians(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::HoursToRadians(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1HoursToDegrees(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::HoursToDegrees(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1DegreesToHours(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::DegreesToHours(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1PI(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)CAACoordinateTransformation::PI();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1MapTo0To360Range(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::MapTo0To360Range(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1MapToMinus90To90Range(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::MapToMinus90To90Range(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1MapTo0To24Range(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::MapTo0To24Range(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1MapTo0To2PIRange(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAACoordinateTransformation::MapTo0To2PIRange(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1DMSToDegrees_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (double)CAACoordinateTransformation::DMSToDegrees(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAACoordinateTransformation_1DMSToDegrees_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAACoordinateTransformation::DMSToDegrees(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAACoordinateTransformation(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAACoordinateTransformation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAACoordinateTransformation *)new CAACoordinateTransformation();
  *(CAACoordinateTransformation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAACoordinateTransformation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAACoordinateTransformation *arg1 = (CAACoordinateTransformation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAACoordinateTransformation **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAACalendarDate(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAACalendarDate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAACalendarDate *)new CAACalendarDate();
  *(CAACalendarDate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Year_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->Year = arg2;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Year_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  result = (long) ((arg1)->Year);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Month_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->Month = arg2;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Month_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  result = (long) ((arg1)->Month);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Day_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->Day = arg2;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAACalendarDate_1Day_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAACalendarDate **)&jarg1; 
  result = (long) ((arg1)->Day);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAACalendarDate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAACalendarDate *arg1 = (CAACalendarDate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAACalendarDate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1SUNDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::SUNDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1MONDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::MONDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1TUESDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::TUESDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1WEDNESDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::WEDNESDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1THURSDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::THURSDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1FRIDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::FRIDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1SATURDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate::DAY_OF_WEEK)CAADate::SATURDAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADate_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAADate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAADate *)new CAADate();
  *(CAADate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jdouble jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  double arg3 ;
  bool arg4 ;
  CAADate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (CAADate *)new CAADate(arg1,arg2,arg3,arg4);
  *(CAADate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jboolean jarg7) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  bool arg7 ;
  CAADate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = jarg7 ? true : false; 
  result = (CAADate *)new CAADate(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(CAADate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADate_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAADate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (CAADate *)new CAADate(arg1,arg2);
  *(CAADate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DateToJD(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jdouble jarg3, jboolean jarg4) {
  jdouble jresult = 0 ;
  long arg1 ;
  long arg2 ;
  double arg3 ;
  bool arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (double)CAADate::DateToJD(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1IsLeap(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jboolean jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (bool)CAADate::IsLeap(arg1,arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DayOfYearToDayAndMonth(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jlong jarg3, jlong jarg4) {
  long arg1 ;
  bool arg2 ;
  long *arg3 = 0 ;
  long *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = *(long **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg4 = *(long **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  CAADate::DayOfYearToDayAndMonth(arg1,arg2,*arg3,*arg4);
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1JulianToGregorian(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  long arg3 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  result = CAADate::JulianToGregorian(arg1,arg2,arg3);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1GregorianToJulian(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  long arg3 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  result = CAADate::GregorianToJulian(arg1,arg2,arg3);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1INT(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAADate::INT(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1AfterPapalReform_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jdouble jarg3) {
  jboolean jresult = 0 ;
  long arg1 ;
  long arg2 ;
  double arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (double)jarg3; 
  result = (bool)CAADate::AfterPapalReform(arg1,arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1AfterPapalReform_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jboolean jresult = 0 ;
  double arg1 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (bool)CAADate::AfterPapalReform(arg1);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DayOfYear_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  long arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAADate::DayOfYear(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DaysInMonth_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jint jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (long)CAADate::DaysInMonth(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Julian(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (double)((CAADate const *)arg1)->Julian();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Day(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->Day();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Month(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->Month();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Year(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->Year();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Hour(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->Hour();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Minute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->Minute();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Second(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (double)((CAADate const *)arg1)->Second();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Set_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7, jboolean jarg8) {
  CAADate *arg1 = (CAADate *) 0 ;
  long arg2 ;
  long arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  bool arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = jarg8 ? true : false; 
  (arg1)->Set(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Set_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jboolean jarg3) {
  CAADate *arg1 = (CAADate *) 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->Set(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1SetInGregorianCalendar(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAADate *arg1 = (CAADate *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->SetInGregorianCalendar(arg2);
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  CAADate *arg1 = (CAADate *) 0 ;
  long *arg2 = 0 ;
  long *arg3 = 0 ;
  long *arg4 = 0 ;
  long *arg5 = 0 ;
  long *arg6 = 0 ;
  double *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  arg2 = *(long **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg3 = *(long **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg4 = *(long **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg5 = *(long **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg6 = *(long **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "long & reference is null");
    return ;
  } 
  arg7 = *(double **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return ;
  } 
  ((CAADate const *)arg1)->Get(*arg2,*arg3,*arg4,*arg5,*arg6,*arg7);
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DayOfWeek(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  CAADate::DAY_OF_WEEK result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (CAADate::DAY_OF_WEEK)((CAADate const *)arg1)->DayOfWeek();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DayOfYear_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (double)((CAADate const *)arg1)->DayOfYear();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DaysInMonth_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->DaysInMonth();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1DaysInYear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (long)((CAADate const *)arg1)->DaysInYear();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1Leap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (bool)((CAADate const *)arg1)->Leap();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1InGregorianCalendar(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (bool)((CAADate const *)arg1)->InGregorianCalendar();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADate_1FractionalYear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAADate *arg1 = (CAADate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAADate **)&jarg1; 
  result = (double)((CAADate const *)arg1)->FractionalYear();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAADate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAADate *arg1 = (CAADate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAADate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1SunSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::SunSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1MercurySemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::MercurySemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1VenusSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::VenusSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1MarsSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::MarsSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1JupiterEquatorialSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::JupiterEquatorialSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1JupiterPolarSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::JupiterPolarSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1SaturnEquatorialSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::SaturnEquatorialSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1SaturnPolarSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::SaturnPolarSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1ApparentSaturnPolarSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAADiameters::ApparentSaturnPolarSemidiameterA(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1UranusSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::UranusSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1NeptuneSemidiameterA(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::NeptuneSemidiameterA(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1MercurySemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::MercurySemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1VenusSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::VenusSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1MarsSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::MarsSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1JupiterEquatorialSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::JupiterEquatorialSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1JupiterPolarSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::JupiterPolarSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1SaturnEquatorialSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::SaturnEquatorialSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1SaturnPolarSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::SaturnPolarSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1ApparentSaturnPolarSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAADiameters::ApparentSaturnPolarSemidiameterB(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1UranusSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::UranusSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1NeptuneSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::NeptuneSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1PlutoSemidiameterB(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::PlutoSemidiameterB(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1GeocentricMoonSemidiameter(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADiameters::GeocentricMoonSemidiameter(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1TopocentricMoonSemidiameter(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = (double)CAADiameters::TopocentricMoonSemidiameter(arg1,arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1AsteroidDiameter(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAADiameters::AsteroidDiameter(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADiameters_1ApparentAsteroidDiameter(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAADiameters::ApparentAsteroidDiameter(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADiameters(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAADiameters *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAADiameters *)new CAADiameters();
  *(CAADiameters **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAADiameters(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAADiameters *arg1 = (CAADiameters *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAADiameters **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1DeltaT(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::DeltaT(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1CumulativeLeapSeconds(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::CumulativeLeapSeconds(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1TT2UTC(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::TT2UTC(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1UTC2TT(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::UTC2TT(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1TT2TAI(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::TT2TAI(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1TAI2TT(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::TAI2TT(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1TT2UT1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::TT2UT1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1UT12TT(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::UT12TT(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAADynamicalTime_1UT1MinusUTC(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAADynamicalTime::UT1MinusUTC(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAADynamicalTime(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAADynamicalTime *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAADynamicalTime *)new CAADynamicalTime();
  *(CAADynamicalTime **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAADynamicalTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAADynamicalTime *arg1 = (CAADynamicalTime *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAADynamicalTime **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEarth::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEarth::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEarth::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1SunMeanAnomaly(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAEarth::SunMeanAnomaly(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1Eccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAEarth::Eccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1EclipticLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEarth::EclipticLongitudeJ2000(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEarth_1EclipticLatitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEarth::EclipticLatitudeJ2000(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEarth(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEarth *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEarth *)new CAAEarth();
  *(CAAEarth **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEarth(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEarth *arg1 = (CAAEarth *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEarth **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEasterDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEasterDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEasterDetails *)new CAAEasterDetails();
  *(CAAEasterDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEasterDetails_1Month_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CAAEasterDetails *arg1 = (CAAEasterDetails *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEasterDetails **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->Month = arg2;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAEasterDetails_1Month_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAAEasterDetails *arg1 = (CAAEasterDetails *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEasterDetails **)&jarg1; 
  result = (long) ((arg1)->Month);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEasterDetails_1Day_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CAAEasterDetails *arg1 = (CAAEasterDetails *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEasterDetails **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->Day = arg2;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAEasterDetails_1Day_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CAAEasterDetails *arg1 = (CAAEasterDetails *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEasterDetails **)&jarg1; 
  result = (long) ((arg1)->Day);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEasterDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEasterDetails *arg1 = (CAAEasterDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEasterDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEaster_1Calculate(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  CAAEasterDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAEaster::Calculate(arg1,arg2);
  *(CAAEasterDetails **)&jresult = new CAAEasterDetails((const CAAEasterDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEaster(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEaster *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEaster *)new CAAEaster();
  *(CAAEaster **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEaster(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEaster *arg1 = (CAAEaster *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEaster **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1TOTAL_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::TOTAL_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1ANNULAR_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::ANNULAR_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1ANNULAR_1TOTAL_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::ANNULAR_TOTAL_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1CENTRAL_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::CENTRAL_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1PARTIAL_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::PARTIAL_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1NON_1CENTRAL_1ECLIPSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)CAASolarEclipseDetails::NON_CENTRAL_ECLIPSE;
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASolarEclipseDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASolarEclipseDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASolarEclipseDetails *)new CAASolarEclipseDetails();
  *(CAASolarEclipseDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1Flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->Flags = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1Flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (unsigned int) ((arg1)->Flags);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1TimeOfMaximumEclipse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TimeOfMaximumEclipse = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1TimeOfMaximumEclipse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->TimeOfMaximumEclipse);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1F_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->F = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1F_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->F);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1u_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->u = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1u_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->u);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1gamma_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->gamma = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1gamma_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->gamma);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1GreatestMagnitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->GreatestMagnitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASolarEclipseDetails_1GreatestMagnitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->GreatestMagnitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASolarEclipseDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASolarEclipseDetails *arg1 = (CAASolarEclipseDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASolarEclipseDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAALunarEclipseDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAALunarEclipseDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAALunarEclipseDetails *)new CAALunarEclipseDetails();
  *(CAALunarEclipseDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1bEclipse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bEclipse = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1bEclipse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (bool) ((arg1)->bEclipse);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1TimeOfMaximumEclipse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TimeOfMaximumEclipse = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1TimeOfMaximumEclipse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->TimeOfMaximumEclipse);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1F_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->F = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1F_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->F);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1u_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->u = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1u_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->u);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1gamma_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->gamma = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1gamma_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->gamma);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PenumbralRadii_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PenumbralRadii = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PenumbralRadii_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->PenumbralRadii);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1UmbralRadii_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->UmbralRadii = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1UmbralRadii_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->UmbralRadii);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PenumbralMagnitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PenumbralMagnitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PenumbralMagnitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->PenumbralMagnitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1UmbralMagnitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->UmbralMagnitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1UmbralMagnitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->UmbralMagnitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PartialPhaseSemiDuration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PartialPhaseSemiDuration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PartialPhaseSemiDuration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->PartialPhaseSemiDuration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1TotalPhaseSemiDuration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TotalPhaseSemiDuration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1TotalPhaseSemiDuration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->TotalPhaseSemiDuration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PartialPhasePenumbraSemiDuration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PartialPhasePenumbraSemiDuration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAALunarEclipseDetails_1PartialPhasePenumbraSemiDuration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  result = (double) ((arg1)->PartialPhasePenumbraSemiDuration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAALunarEclipseDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAALunarEclipseDetails *arg1 = (CAALunarEclipseDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAALunarEclipseDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipses_1CalculateSolar(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  CAASolarEclipseDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = CAAEclipses::CalculateSolar(arg1);
  *(CAASolarEclipseDetails **)&jresult = new CAASolarEclipseDetails((const CAASolarEclipseDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipses_1CalculateLunar(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  CAALunarEclipseDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = CAAEclipses::CalculateLunar(arg1);
  *(CAALunarEclipseDetails **)&jresult = new CAALunarEclipseDetails((const CAALunarEclipseDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEclipses(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEclipses *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEclipses *)new CAAEclipses();
  *(CAAEclipses **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEclipses(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEclipses *arg1 = (CAAEclipses *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEclipses **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEclipticalElementDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEclipticalElementDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEclipticalElementDetails *)new CAAEclipticalElementDetails();
  *(CAAEclipticalElementDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->i = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  result = (double) ((arg1)->i);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  result = (double) ((arg1)->w);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1omega_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->omega = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElementDetails_1omega_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  result = (double) ((arg1)->omega);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEclipticalElementDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEclipticalElementDetails *arg1 = (CAAEclipticalElementDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEclipticalElementDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElements_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  CAAEclipticalElementDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = CAAEclipticalElements::Calculate(arg1,arg2,arg3,arg4,arg5);
  *(CAAEclipticalElementDetails **)&jresult = new CAAEclipticalElementDetails((const CAAEclipticalElementDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEclipticalElements_1FK4B1950ToFK5J2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAAEclipticalElementDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAAEclipticalElements::FK4B1950ToFK5J2000(arg1,arg2,arg3);
  *(CAAEclipticalElementDetails **)&jresult = new CAAEclipticalElementDetails((const CAAEclipticalElementDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEclipticalElements(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEclipticalElements *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEclipticalElements *)new CAAEclipticalElements();
  *(CAAEclipticalElements **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEclipticalElements(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEclipticalElements *arg1 = (CAAEclipticalElements *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEclipticalElements **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercurySemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercurySemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneMeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneMeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneSemimajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneSemimajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneEccentricity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneEccentricity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneInclination(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneInclination(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneLongitudePerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneLongitudePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MercuryLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MercuryLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1VenusLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::VenusLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1EarthLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::EarthLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1MarsLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::MarsLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1JupiterLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::JupiterLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1SaturnLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::SaturnLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1UranusLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::UranusLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneMeanLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneMeanLongitudeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneInclinationJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneInclinationJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneLongitudeAscendingNodeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneLongitudeAscendingNodeJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElementsPlanetaryOrbit_1NeptuneLongitudePerihelionJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElementsPlanetaryOrbit::NeptuneLongitudePerihelionJ2000(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAElementsPlanetaryOrbit(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAElementsPlanetaryOrbit *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAElementsPlanetaryOrbit *)new CAAElementsPlanetaryOrbit();
  *(CAAElementsPlanetaryOrbit **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAElementsPlanetaryOrbit(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAElementsPlanetaryOrbit *arg1 = (CAAElementsPlanetaryOrbit *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAElementsPlanetaryOrbit **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEllipticalObjectElements(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEllipticalObjectElements *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEllipticalObjectElements *)new CAAEllipticalObjectElements();
  *(CAAEllipticalObjectElements **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->a);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->e);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->i = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->i);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->w);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1omega_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->omega = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1omega_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->omega);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1JDEquinox_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->JDEquinox = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1JDEquinox_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->JDEquinox);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1T_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->T = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectElements_1T_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  result = (double) ((arg1)->T);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEllipticalObjectElements(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEllipticalObjectElements *arg1 = (CAAEllipticalObjectElements *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEllipticalPlanetaryDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEllipticalPlanetaryDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEllipticalPlanetaryDetails *)new CAAEllipticalPlanetaryDetails();
  *(CAAEllipticalPlanetaryDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentGeocentricLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentGeocentricLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricLatitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentGeocentricLatitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricLatitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentGeocentricLatitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ApparentGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalPlanetaryDetails_1ApparentGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  result = (double) ((arg1)->ApparentGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEllipticalPlanetaryDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEllipticalPlanetaryDetails *arg1 = (CAAEllipticalPlanetaryDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEllipticalPlanetaryDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEllipticalObjectDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEllipticalObjectDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEllipticalObjectDetails *)new CAAEllipticalObjectDetails();
  *(CAAEllipticalObjectDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricRectangularEquatorial_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEquatorial = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricRectangularEquatorial_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEquatorial);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricRectangularEcliptical_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEcliptical = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricRectangularEcliptical_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEcliptical);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricEclipticLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricEclipticLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricEclipticLatitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLatitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1HeliocentricEclipticLatitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLatitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1TrueGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1AstrometricGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1Elongation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Elongation = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1Elongation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->Elongation);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1PhaseAngle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PhaseAngle = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEllipticalObjectDetails_1PhaseAngle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  result = (double) ((arg1)->PhaseAngle);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEllipticalObjectDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEllipticalObjectDetails *arg1 = (CAAEllipticalObjectDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEllipticalObjectDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1DistanceToLightTime(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElliptical::DistanceToLightTime(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1Calculate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  CAAElliptical::EllipticalObject arg2 ;
  bool arg3 ;
  CAAEllipticalPlanetaryDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (CAAElliptical::EllipticalObject)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = CAAElliptical::Calculate(arg1,arg2,arg3);
  *(CAAEllipticalPlanetaryDetails **)&jresult = new CAAEllipticalPlanetaryDetails((const CAAEllipticalPlanetaryDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1SemiMajorAxisFromPerihelionDistance(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAElliptical::SemiMajorAxisFromPerihelionDistance(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1MeanMotionFromSemiMajorAxis(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAElliptical::MeanMotionFromSemiMajorAxis(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1Calculate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  CAAEllipticalObjectElements *arg2 = 0 ;
  bool arg3 ;
  CAAEllipticalObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (double)jarg1; 
  arg2 = *(CAAEllipticalObjectElements **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAEllipticalObjectElements const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = CAAElliptical::Calculate(arg1,(CAAEllipticalObjectElements const &)*arg2,arg3);
  *(CAAEllipticalObjectDetails **)&jresult = new CAAEllipticalObjectDetails((const CAAEllipticalObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1InstantaneousVelocity(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAElliptical::InstantaneousVelocity(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1VelocityAtPerihelion(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAElliptical::VelocityAtPerihelion(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1VelocityAtAphelion(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAElliptical::VelocityAtAphelion(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1LengthOfEllipse(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAElliptical::LengthOfEllipse(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1CometMagnitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAElliptical::CometMagnitude(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAElliptical_1MinorPlanetMagnitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = (double)CAAElliptical::MinorPlanetMagnitude(arg1,arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAElliptical(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAElliptical *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAElliptical *)new CAAElliptical();
  *(CAAElliptical **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAElliptical(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAElliptical *arg1 = (CAAElliptical *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAElliptical **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquationOfTime_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEquationOfTime::Calculate(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEquationOfTime(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEquationOfTime *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEquationOfTime *)new CAAEquationOfTime();
  *(CAAEquationOfTime **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEquationOfTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEquationOfTime *arg1 = (CAAEquationOfTime *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEquationOfTime **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1NorthwardEquinox(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::NorthwardEquinox(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1NorthernSolstice(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::NorthernSolstice(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1SouthwardEquinox(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::SouthwardEquinox(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1SouthernSolstice(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::SouthernSolstice(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1LengthOfSpring(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::LengthOfSpring(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1LengthOfSummer(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::LengthOfSummer(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1LengthOfAutumn(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::LengthOfAutumn(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAEquinoxesAndSolstices_1LengthOfWinter(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAAEquinoxesAndSolstices::LengthOfWinter(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAEquinoxesAndSolstices(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAEquinoxesAndSolstices *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAEquinoxesAndSolstices *)new CAAEquinoxesAndSolstices();
  *(CAAEquinoxesAndSolstices **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAEquinoxesAndSolstices(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAEquinoxesAndSolstices *arg1 = (CAAEquinoxesAndSolstices *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAEquinoxesAndSolstices **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAFK5_1CorrectionInLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAFK5::CorrectionInLongitude(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAFK5_1CorrectionInLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAFK5::CorrectionInLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAFK5_1ConvertVSOPToFK5J2000(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAA3DCoordinate *arg1 = 0 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAA3DCoordinate const & reference is null");
    return 0;
  } 
  result = CAAFK5::ConvertVSOPToFK5J2000((CAA3DCoordinate const &)*arg1);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAFK5_1ConvertVSOPToFK5B1950(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAA3DCoordinate *arg1 = 0 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAA3DCoordinate const & reference is null");
    return 0;
  } 
  result = CAAFK5::ConvertVSOPToFK5B1950((CAA3DCoordinate const &)*arg1);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAFK5_1ConvertVSOPToFK5AnyEquinox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  CAA3DCoordinate *arg1 = 0 ;
  double arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAA3DCoordinate **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAA3DCoordinate const & reference is null");
    return 0;
  } 
  arg2 = (double)jarg2; 
  result = CAAFK5::ConvertVSOPToFK5AnyEquinox((CAA3DCoordinate const &)*arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAFK5(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAFK5 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAFK5 *)new CAAFK5();
  *(CAAFK5 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAFK5(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAFK5 *arg1 = (CAAFK5 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAFK5 **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAGalileanMoonDetail(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAGalileanMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAGalileanMoonDetail *)new CAAGalileanMoonDetail();
  *(CAAGalileanMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1MeanLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->MeanLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1MeanLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (double) ((arg1)->MeanLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TrueLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TrueLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (double) ((arg1)->TrueLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TropicalLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TropicalLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TropicalLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (double) ((arg1)->TropicalLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1EquatorialLatitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->EquatorialLatitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1EquatorialLatitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (double) ((arg1)->EquatorialLatitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (double) ((arg1)->r);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TrueRectangularCoordinates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->TrueRectangularCoordinates = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1TrueRectangularCoordinates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->TrueRectangularCoordinates);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1ApparentRectangularCoordinates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->ApparentRectangularCoordinates = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1ApparentRectangularCoordinates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->ApparentRectangularCoordinates);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInTransit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInTransit = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInTransit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInTransit);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInOccultation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInOccultation = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInOccultation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInOccultation);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInEclipse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInEclipse = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInEclipse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInEclipse);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInShadowTransit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInShadowTransit = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonDetail_1bInShadowTransit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInShadowTransit);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAGalileanMoonDetail(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAGalileanMoonDetail *arg1 = (CAAGalileanMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAGalileanMoonDetail **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *arg2 = (CAAGalileanMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  arg2 = *(CAAGalileanMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite1 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  result = (CAAGalileanMoonDetail *)& ((arg1)->Satellite1);
  *(CAAGalileanMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *arg2 = (CAAGalileanMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  arg2 = *(CAAGalileanMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite2 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  result = (CAAGalileanMoonDetail *)& ((arg1)->Satellite2);
  *(CAAGalileanMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite3_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *arg2 = (CAAGalileanMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  arg2 = *(CAAGalileanMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite3 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite3_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  result = (CAAGalileanMoonDetail *)& ((arg1)->Satellite3);
  *(CAAGalileanMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite4_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *arg2 = (CAAGalileanMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  arg2 = *(CAAGalileanMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite4 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoonsDetails_1Satellite4_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  CAAGalileanMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  result = (CAAGalileanMoonDetail *)& ((arg1)->Satellite4);
  *(CAAGalileanMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAGalileanMoonsDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAGalileanMoonsDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAGalileanMoonsDetails *)new CAAGalileanMoonsDetails();
  *(CAAGalileanMoonsDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAGalileanMoonsDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAGalileanMoonsDetails *arg1 = (CAAGalileanMoonsDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAGalileanMoonsDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAGalileanMoons_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAAGalileanMoonsDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAGalileanMoons::Calculate(arg1,arg2);
  *(CAAGalileanMoonsDetails **)&jresult = new CAAGalileanMoonsDetails((const CAAGalileanMoonsDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAGalileanMoons(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAGalileanMoons *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAGalileanMoons *)new CAAGalileanMoons();
  *(CAAGalileanMoons **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAGalileanMoons(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAGalileanMoons *arg1 = (CAAGalileanMoons *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAGalileanMoons **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGlobe_1RhoSinThetaPrime(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAGlobe::RhoSinThetaPrime(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGlobe_1RhoCosThetaPrime(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAGlobe::RhoCosThetaPrime(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGlobe_1RadiusOfParallelOfLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAGlobe::RadiusOfParallelOfLatitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGlobe_1RadiusOfCurvature(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAGlobe::RadiusOfCurvature(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAGlobe_1DistanceBetweenPoints(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAGlobe::DistanceBetweenPoints(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAGlobe(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAGlobe *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAGlobe *)new CAAGlobe();
  *(CAAGlobe **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAGlobe(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAGlobe *arg1 = (CAAGlobe *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAGlobe **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1PhaseAngle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::PhaseAngle(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1PhaseAngle_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  result = (double)CAAIlluminatedFraction::PhaseAngle(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1PhaseAngleRectangular(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  result = (double)CAAIlluminatedFraction::PhaseAngleRectangular(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1IlluminatedFraction_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAIlluminatedFraction::IlluminatedFraction(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1IlluminatedFraction_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::IlluminatedFraction(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1MercuryMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::MercuryMagnitudeMuller(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1VenusMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::VenusMagnitudeMuller(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1MarsMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::MarsMagnitudeMuller(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1JupiterMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::JupiterMagnitudeMuller(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1SaturnMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAIlluminatedFraction::SaturnMagnitudeMuller(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1UranusMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::UranusMagnitudeMuller(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1NeptuneMagnitudeMuller(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::NeptuneMagnitudeMuller(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1MercuryMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::MercuryMagnitudeAA(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1VenusMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::VenusMagnitudeAA(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1MarsMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::MarsMagnitudeAA(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1JupiterMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAIlluminatedFraction::JupiterMagnitudeAA(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1SaturnMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAIlluminatedFraction::SaturnMagnitudeAA(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1UranusMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::UranusMagnitudeAA(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1NeptuneMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::NeptuneMagnitudeAA(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAIlluminatedFraction_1PlutoMagnitudeAA(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAIlluminatedFraction::PlutoMagnitudeAA(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAIlluminatedFraction(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAIlluminatedFraction *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAIlluminatedFraction *)new CAAIlluminatedFraction();
  *(CAAIlluminatedFraction **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAIlluminatedFraction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAIlluminatedFraction *arg1 = (CAAIlluminatedFraction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAIlluminatedFraction **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Interpolate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAInterpolate::Interpolate(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Interpolate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  result = (double)CAAInterpolate::Interpolate(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1InterpolateToHalves(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAInterpolate::InterpolateToHalves(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1LagrangeInterpolate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  int arg2 ;
  double *arg3 = (double *) 0 ;
  double *arg4 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(double **)&jarg3; 
  arg4 = *(double **)&jarg4; 
  result = (double)CAAInterpolate::LagrangeInterpolate(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Extremum_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double *arg4 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(double **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (double)CAAInterpolate::Extremum(arg1,arg2,arg3,*arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Extremum_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jlong jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double *arg6 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = *(double **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (double)CAAInterpolate::Extremum(arg1,arg2,arg3,arg4,arg5,*arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Zero_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAInterpolate::Zero(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Zero_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = (double)CAAInterpolate::Zero(arg1,arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Zero2_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAInterpolate::Zero2(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAInterpolate_1Zero2_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = (double)CAAInterpolate::Zero2(arg1,arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAInterpolate(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAInterpolate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAInterpolate *)new CAAInterpolate();
  *(CAAInterpolate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAInterpolate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAInterpolate *arg1 = (CAAInterpolate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAInterpolate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAJewishCalendar_1DateOfPesach_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAJewishCalendar::DateOfPesach(arg1,arg2);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAJewishCalendar_1DateOfPesach_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  long arg1 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = CAAJewishCalendar::DateOfPesach(arg1);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAJewishCalendar_1IsLeap(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jboolean jresult = 0 ;
  long arg1 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (bool)CAAJewishCalendar::IsLeap(arg1);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAJewishCalendar_1DaysInYear(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  long arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (long)CAAJewishCalendar::DaysInYear(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAJewishCalendar(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAJewishCalendar *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAJewishCalendar *)new CAAJewishCalendar();
  *(CAAJewishCalendar **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAJewishCalendar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAJewishCalendar *arg1 = (CAAJewishCalendar *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAJewishCalendar **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAJupiter_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAJupiter::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAJupiter_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAJupiter::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAJupiter_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAJupiter::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAJupiter(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAJupiter *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAJupiter *)new CAAJupiter();
  *(CAAJupiter **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAJupiter(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAJupiter *arg1 = (CAAJupiter *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAJupiter **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAKepler_1Calculate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  int arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  result = (double)CAAKepler::Calculate(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAKepler_1Calculate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAKepler::Calculate(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAKepler(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAKepler *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAKepler *)new CAAKepler();
  *(CAAKepler **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAKepler(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAKepler *arg1 = (CAAKepler *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAKepler **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMars_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMars::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMars_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMars::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMars_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMars::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMars(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMars *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMars *)new CAAMars();
  *(CAAMars **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMars(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMars *arg1 = (CAAMars *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMars **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMercury_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMercury::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMercury_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMercury::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMercury_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMercury::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMercury(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMercury *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMercury *)new CAAMercury();
  *(CAAMercury **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMercury(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMercury *arg1 = (CAAMercury *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMercury **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1MeanLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::MeanLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1MeanElongation(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::MeanElongation(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1MeanAnomaly(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::MeanAnomaly(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1ArgumentOfLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::ArgumentOfLatitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1MeanLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::MeanLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1MeanLongitudePerigee(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::MeanLongitudePerigee(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1TrueLongitudeAscendingNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::TrueLongitudeAscendingNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::EclipticLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::EclipticLatitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::RadiusVector(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1RadiusVectorToHorizontalParallax(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::RadiusVectorToHorizontalParallax(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoon_1HorizontalParallaxToRadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoon::HorizontalParallaxToRadiusVector(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoon(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoon *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoon *)new CAAMoon();
  *(CAAMoon **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoon(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoon *arg1 = (CAAMoon *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoon **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonIlluminatedFraction_1GeocentricElongation(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAMoonIlluminatedFraction::GeocentricElongation(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonIlluminatedFraction_1PhaseAngle(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAMoonIlluminatedFraction::PhaseAngle(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonIlluminatedFraction_1IlluminatedFraction(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonIlluminatedFraction::IlluminatedFraction(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonIlluminatedFraction_1PositionAngle(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAAMoonIlluminatedFraction::PositionAngle(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoonIlluminatedFraction(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoonIlluminatedFraction *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoonIlluminatedFraction *)new CAAMoonIlluminatedFraction();
  *(CAAMoonIlluminatedFraction **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoonIlluminatedFraction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoonIlluminatedFraction *arg1 = (CAAMoonIlluminatedFraction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoonIlluminatedFraction **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonMaxDeclinations_1K(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonMaxDeclinations::K(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonMaxDeclinations_1MeanGreatestDeclination(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMoonMaxDeclinations::MeanGreatestDeclination(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonMaxDeclinations_1MeanGreatestDeclinationValue(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonMaxDeclinations::MeanGreatestDeclinationValue(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonMaxDeclinations_1TrueGreatestDeclination(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMoonMaxDeclinations::TrueGreatestDeclination(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonMaxDeclinations_1TrueGreatestDeclinationValue(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAMoonMaxDeclinations::TrueGreatestDeclinationValue(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoonMaxDeclinations(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoonMaxDeclinations *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoonMaxDeclinations *)new CAAMoonMaxDeclinations();
  *(CAAMoonMaxDeclinations **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoonMaxDeclinations(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoonMaxDeclinations *arg1 = (CAAMoonMaxDeclinations *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoonMaxDeclinations **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonNodes_1K(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonNodes::K(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonNodes_1PassageThroNode(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonNodes::PassageThroNode(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoonNodes(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoonNodes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoonNodes *)new CAAMoonNodes();
  *(CAAMoonNodes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoonNodes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoonNodes *arg1 = (CAAMoonNodes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoonNodes **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1K(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::K(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1MeanPerigee(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::MeanPerigee(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1MeanApogee(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::MeanApogee(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1TruePerigee(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::TruePerigee(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1TrueApogee(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::TrueApogee(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1PerigeeParallax(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::PerigeeParallax(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPerigeeApogee_1ApogeeParallax(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPerigeeApogee::ApogeeParallax(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoonPerigeeApogee(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoonPerigeeApogee *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoonPerigeeApogee *)new CAAMoonPerigeeApogee();
  *(CAAMoonPerigeeApogee **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoonPerigeeApogee(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoonPerigeeApogee *arg1 = (CAAMoonPerigeeApogee *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoonPerigeeApogee **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPhases_1K(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPhases::K(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPhases_1MeanPhase(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPhases::MeanPhase(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoonPhases_1TruePhase(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAMoonPhases::TruePhase(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoonPhases(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoonPhases *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoonPhases *)new CAAMoonPhases();
  *(CAAMoonPhases **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoonPhases(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoonPhases *arg1 = (CAAMoonPhases *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoonPhases **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoslemCalendar_1MoslemToJulian(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  long arg3 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  result = CAAMoslemCalendar::MoslemToJulian(arg1,arg2,arg3);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoslemCalendar_1JulianToMoslem(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  long arg3 ;
  CAACalendarDate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  result = CAAMoslemCalendar::JulianToMoslem(arg1,arg2,arg3);
  *(CAACalendarDate **)&jresult = new CAACalendarDate((const CAACalendarDate &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAAMoslemCalendar_1IsLeap(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jboolean jresult = 0 ;
  long arg1 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (bool)CAAMoslemCalendar::IsLeap(arg1);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAMoslemCalendar(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAMoslemCalendar *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAMoslemCalendar *)new CAAMoslemCalendar();
  *(CAAMoslemCalendar **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAMoslemCalendar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAMoslemCalendar *arg1 = (CAAMoslemCalendar *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAMoslemCalendar **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANearParabolicObjectElements(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANearParabolicObjectElements *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANearParabolicObjectElements *)new CAANearParabolicObjectElements();
  *(CAANearParabolicObjectElements **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->q = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->q);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->i = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->i);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->w);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1omega_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->omega = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1omega_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->omega);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1JDEquinox_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->JDEquinox = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1JDEquinox_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->JDEquinox);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1T_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->T = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1T_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->T);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectElements_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->e);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANearParabolicObjectElements(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANearParabolicObjectElements *arg1 = (CAANearParabolicObjectElements *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANearParabolicObjectElements **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANearParabolicObjectDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANearParabolicObjectDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANearParabolicObjectDetails *)new CAANearParabolicObjectDetails();
  *(CAANearParabolicObjectDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricRectangularEquatorial_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEquatorial = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricRectangularEquatorial_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEquatorial);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricRectangularEcliptical_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEcliptical = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricRectangularEcliptical_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEcliptical);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricEclipticLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricEclipticLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricEclipticLatitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLatitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1HeliocentricEclipticLatitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLatitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1TrueGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1AstrometricGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1Elongation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Elongation = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1Elongation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->Elongation);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1PhaseAngle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PhaseAngle = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolicObjectDetails_1PhaseAngle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->PhaseAngle);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANearParabolicObjectDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANearParabolicObjectDetails *arg1 = (CAANearParabolicObjectDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANearParabolicObjectDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolic_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  CAANearParabolicObjectElements *arg2 = 0 ;
  bool arg3 ;
  CAANearParabolicObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (double)jarg1; 
  arg2 = *(CAANearParabolicObjectElements **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAANearParabolicObjectElements const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = CAANearParabolic::Calculate(arg1,(CAANearParabolicObjectElements const &)*arg2,arg3);
  *(CAANearParabolicObjectDetails **)&jresult = new CAANearParabolicObjectDetails((const CAANearParabolicObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolic_1cbrt(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAANearParabolic::cbrt(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANearParabolic_1CalulateTrueAnnomalyAndRadius(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  double arg1 ;
  CAANearParabolicObjectElements *arg2 = 0 ;
  double *arg3 = 0 ;
  double *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (double)jarg1; 
  arg2 = *(CAANearParabolicObjectElements **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAANearParabolicObjectElements const & reference is null");
    return ;
  } 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return ;
  } 
  arg4 = *(double **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return ;
  } 
  CAANearParabolic::CalulateTrueAnnomalyAndRadius(arg1,(CAANearParabolicObjectElements const &)*arg2,*arg3,*arg4);
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANearParabolic(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANearParabolic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANearParabolic *)new CAANearParabolic();
  *(CAANearParabolic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANearParabolic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANearParabolic *arg1 = (CAANearParabolic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANearParabolic **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANeptune_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAANeptune::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANeptune_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAANeptune::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANeptune_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAANeptune::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANeptune(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANeptune *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANeptune *)new CAANeptune();
  *(CAANeptune **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANeptune(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANeptune *arg1 = (CAANeptune *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANeptune **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANodeObjectDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANodeObjectDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANodeObjectDetails *)new CAANodeObjectDetails();
  *(CAANodeObjectDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANodeObjectDetails_1t_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANodeObjectDetails *arg1 = (CAANodeObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANodeObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->t = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANodeObjectDetails_1t_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANodeObjectDetails *arg1 = (CAANodeObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANodeObjectDetails **)&jarg1; 
  result = (double) ((arg1)->t);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAANodeObjectDetails_1radius_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAANodeObjectDetails *arg1 = (CAANodeObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANodeObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->radius = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANodeObjectDetails_1radius_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAANodeObjectDetails *arg1 = (CAANodeObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAANodeObjectDetails **)&jarg1; 
  result = (double) ((arg1)->radius);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANodeObjectDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANodeObjectDetails *arg1 = (CAANodeObjectDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANodeObjectDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANodes_1PassageThroAscendingNode_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = 0 ;
  CAANodeObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAEllipticalObjectElements const & reference is null");
    return 0;
  } 
  result = CAANodes::PassageThroAscendingNode((CAAEllipticalObjectElements const &)*arg1);
  *(CAANodeObjectDetails **)&jresult = new CAANodeObjectDetails((const CAANodeObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANodes_1PassageThroDescendingNode_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAEllipticalObjectElements *arg1 = 0 ;
  CAANodeObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAEllipticalObjectElements **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAEllipticalObjectElements const & reference is null");
    return 0;
  } 
  result = CAANodes::PassageThroDescendingNode((CAAEllipticalObjectElements const &)*arg1);
  *(CAANodeObjectDetails **)&jresult = new CAANodeObjectDetails((const CAANodeObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANodes_1PassageThroAscendingNode_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAParabolicObjectElements *arg1 = 0 ;
  CAANodeObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAParabolicObjectElements const & reference is null");
    return 0;
  } 
  result = CAANodes::PassageThroAscendingNode((CAAParabolicObjectElements const &)*arg1);
  *(CAANodeObjectDetails **)&jresult = new CAANodeObjectDetails((const CAANodeObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAANodes_1PassageThroDescendingNode_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAParabolicObjectElements *arg1 = 0 ;
  CAANodeObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAParabolicObjectElements const & reference is null");
    return 0;
  } 
  result = CAANodes::PassageThroDescendingNode((CAAParabolicObjectElements const &)*arg1);
  *(CAANodeObjectDetails **)&jresult = new CAANodeObjectDetails((const CAANodeObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANodes(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANodes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANodes *)new CAANodes();
  *(CAANodes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANodes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANodes *arg1 = (CAANodes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANodes **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1NutationInLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAANutation::NutationInLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1NutationInObliquity(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAANutation::NutationInObliquity(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1NutationInRightAscension(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = (double)CAANutation::NutationInRightAscension(arg1,arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1NutationInDeclination(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)CAANutation::NutationInDeclination(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1MeanObliquityOfEcliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAANutation::MeanObliquityOfEcliptic(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAANutation_1TrueObliquityOfEcliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAANutation::TrueObliquityOfEcliptic(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAANutation(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAANutation *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAANutation *)new CAANutation();
  *(CAANutation **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAANutation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAANutation *arg1 = (CAANutation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAANutation **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAParabolicObjectElements(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAParabolicObjectElements *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAParabolicObjectElements *)new CAAParabolicObjectElements();
  *(CAAParabolicObjectElements **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->q = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->q);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->i = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->i);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->w);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1omega_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->omega = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1omega_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->omega);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1JDEquinox_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->JDEquinox = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1JDEquinox_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->JDEquinox);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1T_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->T = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectElements_1T_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  result = (double) ((arg1)->T);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAParabolicObjectElements(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAParabolicObjectElements *arg1 = (CAAParabolicObjectElements *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAParabolicObjectElements **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAParabolicObjectDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAParabolicObjectDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAParabolicObjectDetails *)new CAAParabolicObjectDetails();
  *(CAAParabolicObjectDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricRectangularEquatorial_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEquatorial = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricRectangularEquatorial_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEquatorial);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricRectangularEcliptical_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->HeliocentricRectangularEcliptical = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricRectangularEcliptical_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->HeliocentricRectangularEcliptical);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricEclipticLongitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLongitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricEclipticLongitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLongitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricEclipticLatitude_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->HeliocentricEclipticLatitude = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1HeliocentricEclipticLatitude_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->HeliocentricEclipticLatitude);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->TrueGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1TrueGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->TrueGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocenticRA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocenticRA = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocenticRA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocenticRA);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricDeclination_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDeclination = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricDeclination_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDeclination);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricDistance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricDistance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricLightTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->AstrometricGeocentricLightTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1AstrometricGeocentricLightTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->AstrometricGeocentricLightTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1Elongation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Elongation = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1Elongation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->Elongation);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1PhaseAngle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->PhaseAngle = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolicObjectDetails_1PhaseAngle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  result = (double) ((arg1)->PhaseAngle);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAParabolicObjectDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAParabolicObjectDetails *arg1 = (CAAParabolicObjectDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAParabolicObjectDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolic_1CalculateBarkers(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAParabolic::CalculateBarkers(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParabolic_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  CAAParabolicObjectElements *arg2 = 0 ;
  bool arg3 ;
  CAAParabolicObjectDetails result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (double)jarg1; 
  arg2 = *(CAAParabolicObjectElements **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "CAAParabolicObjectElements const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = CAAParabolic::Calculate(arg1,(CAAParabolicObjectElements const &)*arg2,arg3);
  *(CAAParabolicObjectDetails **)&jresult = new CAAParabolicObjectDetails((const CAAParabolicObjectDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAParabolic(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAParabolic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAParabolic *)new CAAParabolic();
  *(CAAParabolic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAParabolic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAParabolic *arg1 = (CAAParabolic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAParabolic **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallactic_1ParallacticAngle(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAParallactic::ParallacticAngle(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallactic_1EclipticLongitudeOnHorizon(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAParallactic::EclipticLongitudeOnHorizon(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallactic_1AngleBetweenEclipticAndHorizon(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAParallactic::AngleBetweenEclipticAndHorizon(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallactic_1AngleBetweenNorthCelestialPoleAndNorthPoleOfEcliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAAParallactic::AngleBetweenNorthCelestialPoleAndNorthPoleOfEcliptic(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAParallactic(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAParallactic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAParallactic *)new CAAParallactic();
  *(CAAParallactic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAParallactic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAParallactic *arg1 = (CAAParallactic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAParallactic **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAATopocentricEclipticDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAATopocentricEclipticDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAATopocentricEclipticDetails *)new CAATopocentricEclipticDetails();
  *(CAATopocentricEclipticDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Lambda_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Lambda = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Lambda_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  result = (double) ((arg1)->Lambda);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Beta_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Beta = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Beta_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  result = (double) ((arg1)->Beta);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Semidiameter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Semidiameter = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAATopocentricEclipticDetails_1Semidiameter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  result = (double) ((arg1)->Semidiameter);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAATopocentricEclipticDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAATopocentricEclipticDetails *arg1 = (CAATopocentricEclipticDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAATopocentricEclipticDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallax_1Equatorial2TopocentricDelta(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  result = CAAParallax::Equatorial2TopocentricDelta(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallax_1Equatorial2Topocentric(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  result = CAAParallax::Equatorial2Topocentric(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallax_1Ecliptic2Topocentric(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  CAATopocentricEclipticDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  result = CAAParallax::Ecliptic2Topocentric(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(CAATopocentricEclipticDetails **)&jresult = new CAATopocentricEclipticDetails((const CAATopocentricEclipticDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallax_1ParallaxToDistance(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAParallax::ParallaxToDistance(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAParallax_1DistanceToParallax(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAParallax::DistanceToParallax(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAParallax(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAParallax *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAParallax *)new CAAParallax();
  *(CAAParallax **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAParallax(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAParallax *arg1 = (CAAParallax *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAParallax **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalJupiterDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalJupiterDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalJupiterDetails *)new CAAPhysicalJupiterDetails();
  *(CAAPhysicalJupiterDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1DE_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->DE = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1DE_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->DE);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1DS_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->DS = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1DS_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->DS);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Geometricw1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Geometricw1 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Geometricw1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->Geometricw1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Geometricw2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Geometricw2 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Geometricw2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->Geometricw2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Apparentw1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Apparentw1 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Apparentw1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->Apparentw1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Apparentw2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Apparentw2 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1Apparentw2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->Apparentw2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiterDetails_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  result = (double) ((arg1)->P);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalJupiterDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalJupiterDetails *arg1 = (CAAPhysicalJupiterDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalJupiterDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalJupiter_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAAPhysicalJupiterDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAPhysicalJupiter::Calculate(arg1,arg2);
  *(CAAPhysicalJupiterDetails **)&jresult = new CAAPhysicalJupiterDetails((const CAAPhysicalJupiterDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalJupiter(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalJupiter *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalJupiter *)new CAAPhysicalJupiter();
  *(CAAPhysicalJupiter **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalJupiter(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalJupiter *arg1 = (CAAPhysicalJupiter *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalJupiter **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalMarsDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalMarsDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalMarsDetails *)new CAAPhysicalMarsDetails();
  *(CAAPhysicalMarsDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1DE_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->DE = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1DE_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->DE);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1DS_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->DS = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1DS_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->DS);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->w);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->P);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1X_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->X = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1X_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->X);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1k_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->k = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1k_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->k);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->q = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->q);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->d = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMarsDetails_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  result = (double) ((arg1)->d);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalMarsDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalMarsDetails *arg1 = (CAAPhysicalMarsDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalMarsDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMars_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAAPhysicalMarsDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAPhysicalMars::Calculate(arg1,arg2);
  *(CAAPhysicalMarsDetails **)&jresult = new CAAPhysicalMarsDetails((const CAAPhysicalMarsDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalMars(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalMars *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalMars *)new CAAPhysicalMars();
  *(CAAPhysicalMars **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalMars(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalMars *arg1 = (CAAPhysicalMars *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalMars **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalMoonDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalMoonDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalMoonDetails *)new CAAPhysicalMoonDetails();
  *(CAAPhysicalMoonDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1ldash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ldash = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1ldash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->ldash);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1bdash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bdash = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1bdash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->bdash);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1ldash2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ldash2 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1ldash2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->ldash2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1bdash2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bdash2 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1bdash2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->bdash2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1l_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->l = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1l_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->l);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->b);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoonDetails_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  result = (double) ((arg1)->P);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalMoonDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalMoonDetails *arg1 = (CAAPhysicalMoonDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalMoonDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASelenographicMoonDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASelenographicMoonDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASelenographicMoonDetails *)new CAASelenographicMoonDetails();
  *(CAASelenographicMoonDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1l0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->l0 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1l0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  result = (double) ((arg1)->l0);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1b0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->b0 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1b0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  result = (double) ((arg1)->b0);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1c0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->c0 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASelenographicMoonDetails_1c0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  result = (double) ((arg1)->c0);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASelenographicMoonDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASelenographicMoonDetails *arg1 = (CAASelenographicMoonDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASelenographicMoonDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1CalculateGeocentric(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  CAAPhysicalMoonDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = CAAPhysicalMoon::CalculateGeocentric(arg1);
  *(CAAPhysicalMoonDetails **)&jresult = new CAAPhysicalMoonDetails((const CAAPhysicalMoonDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1CalculateTopocentric(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  CAAPhysicalMoonDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = CAAPhysicalMoon::CalculateTopocentric(arg1,arg2,arg3);
  *(CAAPhysicalMoonDetails **)&jresult = new CAAPhysicalMoonDetails((const CAAPhysicalMoonDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1CalculateSelenographicPositionOfSun(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAASelenographicMoonDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAPhysicalMoon::CalculateSelenographicPositionOfSun(arg1,arg2);
  *(CAASelenographicMoonDetails **)&jresult = new CAASelenographicMoonDetails((const CAASelenographicMoonDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1AltitudeOfSun(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (double)CAAPhysicalMoon::AltitudeOfSun(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1TimeOfSunrise(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (double)CAAPhysicalMoon::TimeOfSunrise(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalMoon_1TimeOfSunset(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jboolean jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  bool arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (double)CAAPhysicalMoon::TimeOfSunset(arg1,arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalMoon(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalMoon *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalMoon *)new CAAPhysicalMoon();
  *(CAAPhysicalMoon **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalMoon(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalMoon *arg1 = (CAAPhysicalMoon *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalMoon **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalSunDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalSunDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalSunDetails *)new CAAPhysicalSunDetails();
  *(CAAPhysicalSunDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  result = (double) ((arg1)->P);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1B0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->B0 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1B0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  result = (double) ((arg1)->B0);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1L0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->L0 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSunDetails_1L0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  result = (double) ((arg1)->L0);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalSunDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalSunDetails *arg1 = (CAAPhysicalSunDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalSunDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSun_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAAPhysicalSunDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAAPhysicalSun::Calculate(arg1,arg2);
  *(CAAPhysicalSunDetails **)&jresult = new CAAPhysicalSunDetails((const CAAPhysicalSunDetails &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPhysicalSun_1TimeOfStartOfRotation(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPhysicalSun::TimeOfStartOfRotation(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPhysicalSun(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPhysicalSun *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPhysicalSun *)new CAAPhysicalSun();
  *(CAAPhysicalSun **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPhysicalSun(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPhysicalSun *arg1 = (CAAPhysicalSun *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPhysicalSun **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetaryPhenomena_1K(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  CAAPlanetaryPhenomena::PlanetaryObject arg2 ;
  CAAPlanetaryPhenomena::EventType arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (CAAPlanetaryPhenomena::PlanetaryObject)jarg2; 
  arg3 = (CAAPlanetaryPhenomena::EventType)jarg3; 
  result = (double)CAAPlanetaryPhenomena::K(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetaryPhenomena_1Mean(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  CAAPlanetaryPhenomena::PlanetaryObject arg2 ;
  CAAPlanetaryPhenomena::EventType arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (CAAPlanetaryPhenomena::PlanetaryObject)jarg2; 
  arg3 = (CAAPlanetaryPhenomena::EventType)jarg3; 
  result = (double)CAAPlanetaryPhenomena::Mean(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetaryPhenomena_1True(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  CAAPlanetaryPhenomena::PlanetaryObject arg2 ;
  CAAPlanetaryPhenomena::EventType arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (CAAPlanetaryPhenomena::PlanetaryObject)jarg2; 
  arg3 = (CAAPlanetaryPhenomena::EventType)jarg3; 
  result = (double)CAAPlanetaryPhenomena::True(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetaryPhenomena_1ElongationValue(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jboolean jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  CAAPlanetaryPhenomena::PlanetaryObject arg2 ;
  bool arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (CAAPlanetaryPhenomena::PlanetaryObject)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (double)CAAPlanetaryPhenomena::ElongationValue(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPlanetaryPhenomena(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPlanetaryPhenomena *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPlanetaryPhenomena *)new CAAPlanetaryPhenomena();
  *(CAAPlanetaryPhenomena **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPlanetaryPhenomena(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPlanetaryPhenomena *arg1 = (CAAPlanetaryPhenomena *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPlanetaryPhenomena **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MercuryK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::MercuryK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MercuryPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::MercuryPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MercuryAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::MercuryAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1VenusK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::VenusK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1VenusPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::VenusPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1VenusAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::VenusAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1EarthK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::EarthK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1EarthPerihelion_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAPlanetPerihelionAphelion::EarthPerihelion(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1EarthPerihelion_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::EarthPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1EarthAphelion_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  long arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAPlanetPerihelionAphelion::EarthAphelion(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1EarthAphelion_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::EarthAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MarsK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::MarsK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MarsPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::MarsPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1MarsAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::MarsAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1JupiterK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::JupiterK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1JupiterPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::JupiterPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1JupiterAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::JupiterAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1SaturnK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::SaturnK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1SaturnPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::SaturnPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1SaturnAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::SaturnAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1UranusK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::UranusK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1UranusPerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::UranusPerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1UranusAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::UranusAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1NeptuneK(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)CAAPlanetPerihelionAphelion::NeptuneK(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1NeptunePerihelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::NeptunePerihelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPlanetPerihelionAphelion_1NeptuneAphelion(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jdouble jresult = 0 ;
  long arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (double)CAAPlanetPerihelionAphelion::NeptuneAphelion(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPlanetPerihelionAphelion(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPlanetPerihelionAphelion *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPlanetPerihelionAphelion *)new CAAPlanetPerihelionAphelion();
  *(CAAPlanetPerihelionAphelion **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPlanetPerihelionAphelion(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPlanetPerihelionAphelion *arg1 = (CAAPlanetPerihelionAphelion *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPlanetPerihelionAphelion **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPluto_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAPluto::EclipticLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPluto_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAPluto::EclipticLatitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAPluto_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAPluto::RadiusVector(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPluto(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPluto *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPluto *)new CAAPluto();
  *(CAAPluto **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPluto(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPluto *arg1 = (CAAPluto *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPluto **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1PrecessEquatorial(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = CAAPrecession::PrecessEquatorial(arg1,arg2,arg3,arg4);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1PrecessEquatorialFK4(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = CAAPrecession::PrecessEquatorialFK4(arg1,arg2,arg3,arg4);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1PrecessEcliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = CAAPrecession::PrecessEcliptic(arg1,arg2,arg3,arg4);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1EquatorialPMToEcliptic(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  result = CAAPrecession::EquatorialPMToEcliptic(arg1,arg2,arg3,arg4,arg5,arg6);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1AdjustPositionUsingUniformProperMotion(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  result = CAAPrecession::AdjustPositionUsingUniformProperMotion(arg1,arg2,arg3,arg4,arg5);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAAPrecession_1AdjustPositionUsingMotionInSpace(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  CAA2DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  result = CAAPrecession::AdjustPositionUsingMotionInSpace(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(CAA2DCoordinate **)&jresult = new CAA2DCoordinate((const CAA2DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAPrecession(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAPrecession *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAPrecession *)new CAAPrecession();
  *(CAAPrecession **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAPrecession(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAPrecession *arg1 = (CAAPrecession *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAPrecession **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromApparent_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAARefraction::RefractionFromApparent(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromApparent_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAARefraction::RefractionFromApparent(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromApparent_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAARefraction::RefractionFromApparent(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromTrue_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)CAARefraction::RefractionFromTrue(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromTrue_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAARefraction::RefractionFromTrue(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARefraction_1RefractionFromTrue_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAARefraction::RefractionFromTrue(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAARefraction(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAARefraction *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAARefraction *)new CAARefraction();
  *(CAARefraction **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAARefraction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAARefraction *arg1 = (CAARefraction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAARefraction **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAARiseTransitSetDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAARiseTransitSetDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAARiseTransitSetDetails *)new CAARiseTransitSetDetails();
  *(CAARiseTransitSetDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bRiseValid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bRiseValid = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bRiseValid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (bool) ((arg1)->bRiseValid);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Rise_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Rise = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Rise_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (double) ((arg1)->Rise);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bTransitValid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bTransitValid = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bTransitValid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (bool) ((arg1)->bTransitValid);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bTransitAboveHorizon_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bTransitAboveHorizon = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bTransitAboveHorizon_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (bool) ((arg1)->bTransitAboveHorizon);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Transit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Transit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Transit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (double) ((arg1)->Transit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bSetValid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bSetValid = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1bSetValid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (bool) ((arg1)->bSetValid);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Set_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Set = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSetDetails_1Set_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  result = (double) ((arg1)->Set);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAARiseTransitSetDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAARiseTransitSetDetails *arg1 = (CAARiseTransitSetDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAARiseTransitSetDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAARiseTransitSet_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  CAARiseTransitSetDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  result = CAARiseTransitSet::Calculate(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  *(CAARiseTransitSetDetails **)&jresult = new CAARiseTransitSetDetails((const CAARiseTransitSetDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAARiseTransitSet(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAARiseTransitSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAARiseTransitSet *)new CAARiseTransitSet();
  *(CAARiseTransitSet **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAARiseTransitSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAARiseTransitSet *arg1 = (CAARiseTransitSet *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAARiseTransitSet **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturn_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASaturn::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturn_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASaturn::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturn_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASaturn::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturn(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturn *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturn *)new CAASaturn();
  *(CAASaturn **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturn(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturn *arg1 = (CAASaturn *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturn **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturnMoonDetail(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturnMoonDetail *)new CAASaturnMoonDetail();
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1TrueRectangularCoordinates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->TrueRectangularCoordinates = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1TrueRectangularCoordinates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->TrueRectangularCoordinates);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1ApparentRectangularCoordinates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  CAA3DCoordinate *arg2 = (CAA3DCoordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = *(CAA3DCoordinate **)&jarg2; 
  if (arg1) (arg1)->ApparentRectangularCoordinates = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1ApparentRectangularCoordinates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  CAA3DCoordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (CAA3DCoordinate *)& ((arg1)->ApparentRectangularCoordinates);
  *(CAA3DCoordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInTransit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInTransit = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInTransit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInTransit);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInOccultation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInOccultation = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInOccultation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInOccultation);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInEclipse_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInEclipse = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInEclipse_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInEclipse);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInShadowTransit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->bInShadowTransit = arg2;
}


SWIGEXPORT jboolean JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonDetail_1bInShadowTransit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  result = (bool) ((arg1)->bInShadowTransit);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturnMoonDetail(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturnMoonDetail *arg1 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturnMoonDetail **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite1 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite1);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite2 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite2);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite3_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite3 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite3_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite3);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite4_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite4 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite4_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite4);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite5_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite5 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite5_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite5);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite6_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite6 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite6_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite6);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite7_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite7 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite7_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite7);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite8_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *arg2 = (CAASaturnMoonDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  arg2 = *(CAASaturnMoonDetail **)&jarg2; 
  if (arg1) (arg1)->Satellite8 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoonsDetails_1Satellite8_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  CAASaturnMoonDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  result = (CAASaturnMoonDetail *)& ((arg1)->Satellite8);
  *(CAASaturnMoonDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturnMoonsDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturnMoonsDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturnMoonsDetails *)new CAASaturnMoonsDetails();
  *(CAASaturnMoonsDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturnMoonsDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturnMoonsDetails *arg1 = (CAASaturnMoonsDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturnMoonsDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnMoons_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAASaturnMoonsDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASaturnMoons::Calculate(arg1,arg2);
  *(CAASaturnMoonsDetails **)&jresult = new CAASaturnMoonsDetails((const CAASaturnMoonsDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturnMoons(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturnMoons *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturnMoons *)new CAASaturnMoons();
  *(CAASaturnMoons **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturnMoons(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturnMoons *arg1 = (CAASaturnMoons *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturnMoons **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturnRingDetails(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturnRingDetails *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturnRingDetails *)new CAASaturnRingDetails();
  *(CAASaturnRingDetails **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1B_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->B = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1B_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->B);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1Bdash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->Bdash = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1Bdash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->Bdash);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->P);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->a);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->b);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1DeltaU_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->DeltaU = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1DeltaU_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->DeltaU);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1U1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->U1 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1U1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->U1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1U2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->U2 = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRingDetails_1U2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  result = (double) ((arg1)->U2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturnRingDetails(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturnRingDetails *arg1 = (CAASaturnRingDetails *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturnRingDetails **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASaturnRings_1Calculate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAASaturnRingDetails result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASaturnRings::Calculate(arg1,arg2);
  *(CAASaturnRingDetails **)&jresult = new CAASaturnRingDetails((const CAASaturnRingDetails &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASaturnRings(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASaturnRings *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASaturnRings *)new CAASaturnRings();
  *(CAASaturnRings **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASaturnRings(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASaturnRings *arg1 = (CAASaturnRings *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASaturnRings **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASidereal_1MeanGreenwichSiderealTime(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAASidereal::MeanGreenwichSiderealTime(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASidereal_1ApparentGreenwichSiderealTime(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAASidereal::ApparentGreenwichSiderealTime(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASidereal(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASidereal *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASidereal *)new CAASidereal();
  *(CAASidereal **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASidereal(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASidereal *arg1 = (CAASidereal *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASidereal **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAStellarMagnitudes_1CombinedMagnitude_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAStellarMagnitudes::CombinedMagnitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAStellarMagnitudes_1CombinedMagnitude_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  int arg1 ;
  double *arg2 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = *(double **)&jarg2; 
  result = (double)CAAStellarMagnitudes::CombinedMagnitude(arg1,(double const *)arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAStellarMagnitudes_1BrightnessRatio(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)CAAStellarMagnitudes::BrightnessRatio(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAStellarMagnitudes_1MagnitudeDifference(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAAStellarMagnitudes::MagnitudeDifference(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAStellarMagnitudes(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAStellarMagnitudes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAStellarMagnitudes *)new CAAStellarMagnitudes();
  *(CAAStellarMagnitudes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAStellarMagnitudes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAStellarMagnitudes *arg1 = (CAAStellarMagnitudes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAStellarMagnitudes **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricEclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricEclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricEclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricEclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricEclipticLongitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricEclipticLongitudeJ2000(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricEclipticLatitudeJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricEclipticLatitudeJ2000(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricFK5EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricFK5EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1GeometricFK5EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::GeometricFK5EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1ApparentEclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::ApparentEclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1ApparentEclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAASun::ApparentEclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1VariationGeometricEclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)CAASun::VariationGeometricEclipticLongitude(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1EquatorialRectangularCoordinatesMeanEquinox(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASun::EquatorialRectangularCoordinatesMeanEquinox(arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1EclipticRectangularCoordinatesJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASun::EclipticRectangularCoordinatesJ2000(arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1EquatorialRectangularCoordinatesJ2000(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASun::EquatorialRectangularCoordinatesJ2000(arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1EquatorialRectangularCoordinatesB1950(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = CAASun::EquatorialRectangularCoordinatesB1950(arg1,arg2);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_CAASun_1EquatorialRectangularCoordinatesAnyEquinox(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  CAA3DCoordinate result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = CAASun::EquatorialRectangularCoordinatesAnyEquinox(arg1,arg2,arg3);
  *(CAA3DCoordinate **)&jresult = new CAA3DCoordinate((const CAA3DCoordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAASun(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAASun *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAASun *)new CAASun();
  *(CAASun **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAASun(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAASun *arg1 = (CAASun *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAASun **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAUranus_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAUranus::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAUranus_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAUranus::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAUranus_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAUranus::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAUranus(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAUranus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAUranus *)new CAAUranus();
  *(CAAUranus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAUranus(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAUranus *arg1 = (CAAUranus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAUranus **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAVenus_1EclipticLongitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAVenus::EclipticLongitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAVenus_1EclipticLatitude(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAVenus::EclipticLatitude(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_com_naughter_aaplus_AAJNI_CAAVenus_1RadiusVector(JNIEnv *jenv, jclass jcls, jdouble jarg1, jboolean jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  bool arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (double)CAAVenus::RadiusVector(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_naughter_aaplus_AAJNI_new_1CAAVenus(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CAAVenus *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CAAVenus *)new CAAVenus();
  *(CAAVenus **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_naughter_aaplus_AAJNI_delete_1CAAVenus(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CAAVenus *arg1 = (CAAVenus *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CAAVenus **)&jarg1; 
  delete arg1;
}


#ifdef __cplusplus
}
#endif

